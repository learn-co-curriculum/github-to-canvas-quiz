#!/usr/bin/env ruby

# frozen_string_literal: true

lib_dir = File.expand_path(File.join(File.dirname(__FILE__), '../lib'))
$LOAD_PATH.unshift(lib_dir) unless $LOAD_PATH.include?(lib_dir)

require 'bundler/setup'
require 'pry'

require 'github_to_canvas_quiz'

def client
  @client ||= GithubToCanvasQuiz::CanvasAPI::Client.new(api_key: ENV['CANVAS_API_KEY'], host: ENV['CANVAS_API_PATH'])
end

def sync_quiz(path)
  GithubToCanvasQuiz::Synchronizer::Repo.new(client).sync(path)
end

def create_files_from_quiz(course_id, quiz_id, dir = '.')
  # get the quiz data from Canvas (with question data)
  quiz_data = client.get_single_quiz(course_id, quiz_id)
  questions_data = client.list_questions(course_id, quiz_id)
  # convert the quiz data to markdown, including any metadata, and output
  quiz = GithubToCanvasQuiz::Converter::Quiz.from_canvas(course_id, quiz_data)
  questions = questions_data.map do |question_data|
    GithubToCanvasQuiz::Converter::Question.from_canvas(course_id, quiz_id, question_data)
  end
  GithubToCanvasQuiz::RepoBuilder.new(quiz, questions).build(dir)
end

Pry.start
